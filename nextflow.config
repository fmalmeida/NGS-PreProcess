/*


                                      fmalmeida/ngs-preprocess pipeline configuration file

                    Maintained by Felipe Marques de Almeida
                    Contact: almeidafmarques@outlook.com

                    This file conatains all the parameters that are required by the pipeline.
                    Some of them can be left in blank and other ones need a proper configuration.
                    Every file containing a parameter will contain comments to guide its configuration.




 */

/*


                    Customizable parameters

                    All parameters are set under the params {} function.

                    Please do not change anything before the = sign.

                    Fields must be configured and set with values after the = sign.

                    Since the input file parameters will always work as a pattern match
                    it is required that it MUST ALWAYS be double quoted as the example below.

                    The pipeline will process each file that matches the pattern separately.

                                E.g. param1 = "my_reads/input*.fastq"


 */

params {
  /*


                    General (mandatory) Parameters


   */

  output  = 'output'                                     // Sets output directory
  threads = 2                                            // Sets number of threads to be used
  parallel_jobs =                                        // Number of jobs to run in parallel. By default (if empty) it lets nextflow
                                                         // automatically handle it. Be aware that each job (in parallel) can consume
                                                         // N threads (set above). Be sure to carefully check your resources before augmenting
                                                         // this parameter. For example: parallel_jobs = 2 + threads = 5 can consume until 10
                                                         // threads at once.

  /*


                    Parameters for short reads preprocessing
                              with fastp


   */

  shortreads = ''                                       // Path to shortreads. Examples: 'SRR6307304_{1,2}.fastq' | 'SRR7128258*'.
                                                        // Must be double quoted and paired end reads must have the pattern {1,2}.
                                                        // The pipeline will process each file that matches the pattern separately.
  shortreads_type = ''                                  // Type of shortreads. Values: paired | single
  fastp_average_quality = 20                            // Filter reads by its average read quality (it loads the --average_qual fastp param). Default: 20.
  fastp_merge_pairs = false                             // If true, it will tell fastp to try to merge read pairs. Works only for paired end reads.
  fastp_correct_pairs = false                           // If true, it will tell fastp to try to correct small base errors in read pairs. Works only for paired end reads.
  fastp_additional_parameters = ''                      // Pass any other fastp additional parameter that you want. See https://github.com/OpenGene/fastp.


  /*

                      Optional parameter for filtering longreads from pacbio or nanopore.
                      This command uses nanofilt for both technologies. If you prefer to
                      filter reads from any technology with a different program you can
                      left it blank and it you not be executed.

  */
  lreads_min_quality = 5                                 // If blank, lreads will not be filtered.
  lreads_min_length  = 500                               // If blank, lreads will not be filtered.

  /*


                      Parameters for nanopore ONT longreads preprocessing


   */

  nanopore_fastq = ''                                   // Path to nanopore ONT basecalled reads in fastq
  nanopore_is_barcoded = false                          // Tells wheter or not nanopore reads are barcoded
                                                        // It will split barcodes into single files
  nanopore_sequencing_summary = ''                      // Path to nanopore 'sequencing_summary.txt'. Using this will make the pipeline render a
                                                        // sequencing statistics report using pycoQC. pycoQC reports will be saved using the 
                                                        // files basename, so please, use meaningful basename, such as: sample1.txt, sample2.txt, etc.

  /*


                      Parameters for PacBio longreads preprocessing

                      Use bamPath or h5Path, not both.


   */

  pacbio_bam  = ''                                       // Path to PacBio subreads in bam format
  pacbio_h5   = ''                                       // Path to directory containing legacy *.bas.h5 data (1 per directory)
  pacbio_barcodes = ''                                   // Path to xml/fasta file containing barcode information. It will split barcodes into single files.
  pacbio_barcode_design = 'same'                         // By default, only reads with "same" barcodes are given. You can also select reads with only
                                                         // "different" barcodes or any of them. Options: same, different, any
  pacbio_get_hifi = false                                // Whether or not to try to compute CCS reads

}

/*


                      Configuring Nextflow Scopes.

                      Enable or not the production of Nextflow Reports


 */

//Trace Report
trace {
    enabled = false      // Enable? true or false
    file = "${params.output}" + "/annotation_pipeline_trace.txt"
    fields = 'task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss'
}

//Timeline Report
timeline {
    enabled = false      // Enable? true or false
    file = "${params.output}" + "/annotation_pipeline_timeline.html"
}

//Complete Report
report {
    enabled = false      // Enable? true or false
    file = "${params.output}" + "/annotation_pipeline_nextflow_report.html"
}

/*
                                    Setting up NF profiles
                            To use different profiles and executors
            please read more at: https://www.nextflow.io/docs/latest/config.html#config-profiles
 */
profiles {

  // load profiles
  standard    { includeConfig 'conf/standard.config'    }
  local       { includeConfig 'conf/local.config'       }
  conda       { includeConfig 'conf/conda.config'       }
  docker      { includeConfig 'conf/docker.config'      }
  singularity { includeConfig 'conf/singularity.config' }

}

/*
                                    Adding manifest
*/
manifest {
  name            = "fmalmeida/ngs-preprocess"
  author          = "Felipe Almeida"
  description     = "Nextflow pipeline for NGS preprocessing"
  homePage        = "https://github.com/fmalmeida/ngs-preprocess"
  mainScript      = "main.nf"
  nextflowVersion = ">=21.10.0"
  version         = "2.4"
}